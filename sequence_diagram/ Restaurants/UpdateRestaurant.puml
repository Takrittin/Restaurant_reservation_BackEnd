@startuml Update Restaurant (PUT)

header Restaurant reservation Sequence Diagram
footer Page %page% of %lastpage%
title "Update restaurant (PUT)"

participant "Client" as client
participant "<<server>>\n:API Server" as server
participant "<<router>>\n:Restaurants Router" as routerRestaurants
participant "<<controllers>>\n:Restaurants Controller" as controllersRestaurants
participant "<<model>>\n:Restaurant Model" as modelRestaurant
database "<<MongoDB>>\n:Restaurants Database" as RestaurantsDatabase

client -> server ++: req.put('/api/restaurants/:id')
server -> routerRestaurants ++: app.use('/api/restaurants/:id', restaurants)
routerRestaurants -> controllersRestaurants ++: updateRestaurant()
controllersRestaurants -> modelRestaurant ++: Restaurant.findByIdAndUpdate(req.params.id, req.body, { new: true })
modelRestaurant -> RestaurantsDatabase ++: Update restaurant by ID
RestaurantsDatabase --> modelRestaurant --: Updated restaurant
controllersRestaurants <-- modelRestaurant --: Return updated restaurant
controllersRestaurants -> server --: Send response (updated restaurant data)
server -> client --: 200 OK (updated restaurant data)

@enduml