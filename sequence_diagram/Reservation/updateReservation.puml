@startuml Update Reservation (PUT)

header Update Reservation Sequence Diagram
footer Page %page% of %lastpage%
title "Update Reservation (PUT)"

participant "Client" as client
participant "<<JavaScript>>\n:server" as server
participant "<<router>>\n:reservations" as routerReservations
participant "<<middleware>>\n:authMiddleware" as authMiddleware
participant "<<controllers>>\n:reservations" as controllersReservations
participant "<<model>>\n:Reservation" as modelReservation
database "<<MongoDB>>\n:reservations" as ReservationsDatabase

client->server ++: req.put('/api/v1/reservations/:id', { Authorization: "Bearer token", body })
server->routerReservations ++: app.use('/api/v1/reservations/:id', reservations)
routerReservations -> authMiddleware ++: verifyToken(req.headers.Authorization)
authMiddleware --> controllersReservations --: req.user (includes role)

controllersReservations -> modelReservation ++: findById(req.params.id)
modelReservation -> ReservationsDatabase ++: Query Reservation by ID
ReservationsDatabase --> modelReservation --: reservationData

alt Reservation Not Found
    controllersReservations -> client --: response (404 Not Found)
    return
end

alt User Not Authorized
    controllersReservations -> client --: response (401 Unauthorized)
    return
end

controllersReservations -> modelReservation ++: findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true })
modelReservation -> ReservationsDatabase ++: Update Reservation Data
ReservationsDatabase --> modelReservation --: updatedReservationData
modelReservation --> controllersReservations --: updatedReservationData

controllersReservations -> client --: response (200 OK, updatedReservationData)

@enduml